v2:~(|package @util ~(_bind @LOG [doc](__)_) ~(_bind @log &"() nex"(|~(_cram ~(_copy @nex_) @LOG_)|)_) ~(_bind @caar &" lst()"(|~(_car ~(_car @lst_)_)|)_) ~(_bind @cadr &" lst()"(|~(_car ~(_cdr @lst_)_)|)_) ~(_bind @cdar &" lst()"(|~(_cdr ~(_car @lst_)_)|)_) ~(_bind @cddr &" lst()"(|~(_cdr ~(_cdr @lst_)_)|)_) ~(_bind @process &"() list()"(|~(|util:traverse-items-satisfying-and-do @list &"! item"(|~(_is-command @item_)|) &" item~"(|~(_eval @item_)|)|)|)_) ~(_bind @range-from-to &"() start# end#"(|~(|if ~(_::gt:: @start @end_) [word](__) ~(_cons @start ~(_range-from-to ~(_::pl:: @start #1_) @end_)_)|)|)_) ~(_bind @reverse &"() lst()"(|~(|reduce-with-starting @lst &" item accum()"(|~(_cons @item @accum_)|) [word](__)|)|)_) ~(_bind @traverse-atoms-of-and-do &" lst() f&"(|~(|if ~(_is-empty @lst_) @lst ~(|begin ~(_let @item ~(_car @lst_)_) ~(|if ~(_is-expectation @item_) ~(_cons @item ~(_traverse-atoms-of-and-do ~(_cdr @lst_) @f_)_) ~(|if ~(_is-list @item_) ~(_cons ~(_traverse-atoms-of-and-do @item @f_) ~(_traverse-atoms-of-and-do ~(_cdr @lst_) @f_)_) ~(_cons ~(_f @item_) ~(_traverse-atoms-of-and-do ~(_cdr @lst_) @f_)_)|)|)|)|)|)_) ~(_bind @traverse-items-satisfying-and-do &" lst() testf& dof&"(|~(|if ~(_is-empty @lst_) @lst ~(|begin ~(_let @item ~(_car @lst_)_) ~(|if ~(_testf @item_) ~(|cons ~(_dof @item_) ~(_traverse-items-satisfying-and-do ~(_cdr @lst_) @testf @dof_)|) ~(|if ~(_and ~(_is-list @item_) ~(_not ~(_is-expectation @item_)_)_) ~(|cons ~(_traverse-items-satisfying-and-do @item @testf @dof_) ~(_traverse-items-satisfying-and-do ~(_cdr @lst_) @testf @dof_)|) ~(|cons @item ~(_traverse-items-satisfying-and-do ~(_cdr @lst_) @testf @dof_)|)|)|)|)|)|)_) ~(_bind @nth-from &" n# lst()"(|~(|if ~(_::eq:: @n #0_) ~(_car @lst_) ~(_nth-from ~(_- @n #1_) ~(_cdr @lst_)_)|)|)_) ~(_bind @length-of &"# lst()"(|~(|reduce-with-starting @lst &" item accum#"(|~(_::pl:: @accum #1_)|) #0|)|)_) ~(_bind @list-cat &"() lst1() lst2()"(|~(|if ~(_is-empty @lst1_) ~(_copy @lst2_) ~(_cons ~(_car @lst1_) ~(_list-cat ~(_cdr @lst1_) @lst2_)_)|)|)_) ~(_bind @put-contents-in &"() lst() dstlst()"(|~(_list-cat @lst @dstlst_)|)_) ~(_bind @contains-item-satisfying &"! lst() f&"(|~(|reduce-with-starting @lst &" item accum()"(|~(|if ~(_f @item_) !yes @accum|)|) !no|)|)_) ~(_bind @with-only-items-satisfying &"() lst() f&"(|~(|if ~(_is-empty @lst_) @lst ~(|begin ~(_let @item ~(_car @lst_)_) ~(|if ~(_f @item_) ~(_cons @item ~(_with-only-items-satisfying ~(_cdr @lst_) @f_)_) ~(_with-only-items-satisfying ~(_cdr @lst_) @f_)|)|)|)|)_) ~(_bind @lookup-key-in &" key table()"(|~(_let @reclookup &" temptable()"(|~(|if ~(_is-empty @temptable_) ^ ~(|if ~(_equal @key ~(_caar @temptable_)_) ~(_cadr ~(_car @temptable_)_) ~(_reclookup ~(_cdr @temptable_)_)|)|)|)_) ~(_reclookup @table_)|)_) ~(_bind @remove-all-entries-with-key-from &"() key table()"(|~(|reduce-with-starting @table &" item accum()"(|~(|if ~(_equal @key ~(_car @item_)_) @accum ~(_cons @item @accum_)|)|) [word](__)|)|)_) ~(_bind @add-key-value-to &" key value table()"(|~(_cons ~(_cons @key ~(_cons @value [word](__)_)_) @table_)|)_) ~(_bind @key-is-in &"! key table()"(|~(_contains-item-satisfying @table &" entry"(|~(_equal @key ~(_car @entry_)_)|)_)|)_)|)