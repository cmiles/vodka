v2:~"v"(begin ~(import @style-functions) ~(import @util-functions) ~(bind @justify-doc &" doc size|v"(~(let @newdoc [doc]()) ~(do-for-each &" line|v"(~(let @f ~(font ~(light ~(flatten @line)) $"Helvetica")) ~(set @newdoc ~(cons ~(resize-to-target @f @size) @newdoc))) @doc) @newdoc)) ~(bind @resize-to-target &" phrase target|v"(~(let @size ~(find-best-font @phrase @target)) ~(text-size @phrase @size))) ~(bind @do-for-each &" f lst|v"(~"v"(if ~(is-empty @lst) [word]() ~(cons ~(@f ~(car @lst)) ~(do-for-each @f ~(cdr @lst)))))) ~(bind @range &" start end|v"(~"v"(if ~(::gt:: @start @end) [word]() ~(cons @start ~(range ~(::pl:: @start #1) @end))))) ~(bind @make-width-lookup &" list|v"(~"v"(if ~(is-empty @list) [word]() ~"v"(begin ~(let @first ~(car @list)) ~(let @width ~(run-js $"$dom[0].getBoundingClientRect().width" @first)) ~(cons ~(cons @first ~(cons @width [word]())) ~(make-width-lookup ~(cdr @list))))))) ~(bind @lookup &" nex table|v"(~(let @r ^) ~(do-for-each &" entry|v"(~(let @key ~(car @entry)) ~"v"(if ~(equal @key @nex) ~(set @r ~(car ~(cdr @entry))) ^)) @table) @r)) ~(bind @total-in-font &" phrase font-list-entry|v"(~(let @lookup-table ~(car ~(cdr @font-list-entry))) ~(let @sum #0) ~(do-for-each &" letter|v"(~(let @width ~(lookup @letter @lookup-table)) ~"v"(if ~(equal @width ^) ^ ~(set @sum ~(::pl:: @sum @width)))) @phrase) @sum)) ~(bind @calculate-all-widths &" phrase all-lookups|v"(~(do-for-each &" lookup|v"(~(let @font ~(car @lookup)) ~(let @total ~(total-in-font @phrase @lookup)) ~(cons @font ~(cons @total [word]()))) @all-lookups))) ~(bind @find-best-font &" phrase targetwidth|v"(~(let @widthmap ~(calculate-all-widths @phrase @lettermap)) ~(let @best ~(car ~(car @widthmap))) ~(let @find-it &" target prevsize map|v"(~"v"(if ~(is-empty @map) @prevsize ~"v"(begin ~(let @mapentry ~(car @map)) ~(let @fontsize ~(car @mapentry)) ~(let @width-in-font ~(car ~(cdr @mapentry))) ~"v"(if ~(::gt:: @width-in-font @target) @prevsize ~(find-it @target @fontsize ~(cdr @map))))))) ~(find-it @targetwidth @best @widthmap))) [doc]([doc]([line]([word]([letter]"d"() [letter]"o"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"e"()) [letter]" "() [word]([letter]"f"() [letter]"o"() [letter]"l"() [letter]"l"() [letter]"o"() [letter]"w"() [letter]"i"() [letter]"n"() [letter]"g"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"i"() [letter]"n"() [letter]"g"()) [letter]" "() [word]([letter]"f"() [letter]"i"() [letter]"r"() [letter]"s"() [letter]"t"()) [letter]"-"() [letter]" "() [word]([letter]"r"() [letter]"e"() [letter]"t"() [letter]"r"() [letter]"i"() [letter]"e"() [letter]"v"() [letter]"i"() [letter]"n"() [letter]"g"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"e"()) [letter]" "() [word]([letter]"f"() [letter]"o"() [letter]"n"() [letter]"t"()) [letter]" "() [word]([letter]"s"() [letter]"i"() [letter]"z"() [letter]"e"()) [letter]" "() [word]([letter]"d"() [letter]"o"() [letter]"e"() [letter]"s"() [letter]"n"() [letter]"'"() [letter]"t"()) [letter]" "() [word]([letter]"w"() [letter]"o"() [letter]"r"() [letter]"k"()) [letter]" "() [word]([letter]"u"() [letter]"n"() [letter]"t"() [letter]"i"() [letter]"l"()) [letter]" "() [word]([letter]"i"() [letter]"t"() [letter]"'"() [letter]"s"()) [letter]" "() [word]([letter]"b"() [letter]"e"() [letter]"e"() [letter]"n"())) [line]([newline]() [word]([letter]"r"() [letter]"e"() [letter]"n"() [letter]"d"() [letter]"e"() [letter]"r"() [letter]"e"() [letter]"d"()) [letter]" "() [word]([letter]"o"() [letter]"n"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"e"()) [letter]" "() [word]([letter]"s"() [letter]"c"() [letter]"r"() [letter]"e"() [letter]"e"() [letter]"n"()) [letter]" "() [letter]" "() [letter]"-"() [letter]" "() [word]([letter]"l"() [letter]"o"() [letter]"o"() [letter]"k"() [letter]"i"() [letter]"n"() [letter]"g"()) [letter]" "() [word]([letter]"t"() [letter]"o"()) [letter]" "() [word]([letter]"f"() [letter]"i"() [letter]"x"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"i"() [letter]"s"()) [letter]"-"() [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"e"() [letter]"n"()) [letter]" "() [word]([letter]"p"() [letter]"a"() [letter]"s"() [letter]"t"() [letter]"e"()) [letter]" "() [word]([letter]"i"() [letter]"n"()) [letter]" "() [word]([letter]"t"() [letter]"h"() [letter]"e"()) [letter]" "() [word]([letter]"b"() [letter]"i"() [letter]"n"() [letter]"d"()) [letter]" "() [word]([letter]"e"() [letter]"x"() [letter]"p"() [letter]"r"()) [letter]" "() [word]([letter]"b"() [letter]"e"() [letter]"l"() [letter]"o"() [letter]"w"()) [letter]"."())) ~(do-for-each &" n|v"(~(cons @n ~(cons ~(font ~(light ~(text-size [word]([letter]"A"() [letter]"B"() [letter]"C"() [letter]"D"() [letter]"E"() [letter]"F"() [letter]"G"() [letter]"H"() [letter]"I"() [letter]"J"() [letter]"K"() [letter]"L"() [letter]"M"() [letter]"N"() [letter]"O"() [letter]"P"() [letter]"Q"() [letter]"R"() [letter]"S"() [letter]"T"() [letter]"U"() [letter]"V"() [letter]"W"() [letter]"X"() [letter]"Y"() [letter]"Z"() [letter]" "() [letter]";"() [letter]","() [letter]":"() [letter]"?"() [letter]"'"() [letter]{"}() [letter]"."() [letter]","() [letter]"a"() [letter]"b"() [letter]"c"() [letter]"d"() [letter]"e"() [letter]"f"() [letter]"g"() [letter]"h"() [letter]"i"() [letter]"j"() [letter]"k"() [letter]"l"() [letter]"m"() [letter]"n"() [letter]"o"() [letter]"p"() [letter]"q"() [letter]"r"() [letter]"s"() [letter]"t"() [letter]"u"() [letter]"v"() [letter]"w"() [letter]"x"() [letter]"y"() [letter]"z"()) @n)) $"Helvetica") [word]()))) ~(range #8 #40)) ~(bind @lettermap ~(do-for-each &" item|v"(~(let @list ~(car ~(cdr @item))) ~(let @size ~(car @item)) ~(cons @size ~(cons ~(make-width-lookup @list) [word]()))) [doc]([line]([word]([letter]"i"() [letter]"t"() [letter]"e"() [letter]"m"() [letter]"s"()) [letter]" "() [word]([letter]"h"() [letter]"e"() [letter]"r"() [letter]"e"())))))))