v2:~"v"(package @math ~(import @util-functions) ~(bind @min &" a b|v"(~(if ~(::lt:: @a @b) @a @b))) ~(bind @max &" a b|v"(~(if ~(::gt:: @a @b) @a @b))) ~(bind @hex-string-of &" n|v"(~(let @map [word]([word](#10 $"a") [word](#11 $"b") [word](#12 $"c") [word](#13 $"d") [word](#14 $"e") [word](#15 $"f"))) ~(let @string-for-digit &" digit-in-decimal|v"(~"v"(if ~(::lte:: @digit-in-decimal #9) ~(to-string @digit-in-decimal) ~(util:lookup-key-in @digit-in-decimal @map)))) ~(let @do-entire-number &" num|v"(~(let @least-sig-digit ~(modulo @num #16)) ~(let @remaining ~"v"(if ~(::eq:: #0 ~(- @num @least-sig-digit)) #0 ~(::ov:: ~(- @num @least-sig-digit) #16))) ~"v"(string-cat ~"v"(if ~(::eq:: #0 @remaining) $ ~(do-entire-number @remaining)) ~(string-for-digit @least-sig-digit)))) ~(do-entire-number @n))))