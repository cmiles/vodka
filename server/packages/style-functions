v2:~"v"(package @style ~(import @util-functions) ~(bind @with-clip-percent &" nex top% right% bottom% left%|v"(~"v"(with-style-set-to @nex $"clip-path" ~"v"(string-cat $"inset(" ~(to-string ~(round ~(::ti:: %100 @top))) $"% " ~(to-string ~(round ~(::ti:: %100 @right))) $"% " ~(to-string ~(round ~(::ti:: %100 @bottom))) $"% " ~(to-string ~(round ~(::ti:: %100 @left))) $"%)")))) ~(bind @with-hidden &" nex|v"(~(with-style-set-to @nex $"visibility" $"hidden"))) ~(bind @with-visible &" nex|v"(~(with-style-set-to @nex $"visibility" $"visible"))) ~(bind @with-line-height &" nex val$|v"(~(with-style-set-to @nex $"line-height" @val))) ~(bind @with-translate-x-y &" nex xpix#% ypix#%|v"(~(with-style-set-to @nex $"transform" ~(string-cat $"translate(" ~(to-string @xpix) $"px," ~(to-string @ypix) $"px)")))) ~(bind @align-right &" nex|v"(~(with-style-set-to @nex $"align-items" $"flex-end"))) ~(bind @align-left &" nex|v"(~(with-style-set-to @nex $"align-items" $"flex-start"))) ~(bind @clips-contents &" nex|v"(~(with-style-set-to @nex $"overflow" $"hidden"))) ~(bind @with-scrollbars-on &" nex|v"(~(with-style-set-to @nex $"overflow" $"scroll"))) ~(bind @with-x-offset-of &" nex val#%|v"(~"v"(with-style-set-to ~(with-style-set-to @nex $"position" $"relative") $"left" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-y-offset-of &" nex val#%|v"(~"v"(with-style-set-to ~(with-style-set-to @nex $"position" $"relative") $"top" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-alpha-of &" nex val%|v"(~(with-style-set-to @nex $"opacity" ~(to-string @val)))) ~(bind @with-padding-of &" nex val#%|v"(~(with-trlb-padding-of @nex @val @val @val @val))) ~(bind @with-bottom-padding-of &" nex val#%|v"(~(with-style-set-to @nex $"padding-bottom" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-top-padding-of &" nex val#%|v"(~(with-style-set-to @nex $"padding-top" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-left-padding-of &" nex val#%|v"(~(with-style-set-to @nex $"padding-left" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-right-padding-of &" nex val#%|v"(~(with-style-set-to @nex $"padding-right" ~(string-cat ~(to-string @val) $"px")))) ~(bind @with-trlb-padding-of &" nex t#% r#% b#% l#%|v"(~"v"(with-left-padding-of ~"v"(with-right-padding-of ~"v"(with-top-padding-of ~"v"(with-bottom-padding-of @nex @b) @t) @r) @l))) ~(bind @with-background-color-of &" nex color$|v"(~(with-style-set-to @nex $"background-color" @color))) ~(bind @with-height-of &" nex height#%|v"(~(with-style-set-to @nex $"height" ~(string-cat ~(to-string @height) $"px")))) ~(bind @with-width-of &" nex width#%|v"(~(with-style-set-to @nex $"width" ~(string-cat ~(to-string @width) $"px")))) ~(bind @with-scale &" nex scale%|v"(~(with-style-set-to @nex $"transform" ~(string-cat $"scale(" ~(to-string @scale) $"," ~(to-string @scale) $")")))) ~(bind @with-transform-origin-x-y &" nex xorigin% yorigin%|v"(~(with-style-set-to @nex $"transform-origin" ~"v"(string-cat ~(to-string @xorigin) $"%" $" " ~(to-string @yorigin) $"%")))) ~(bind @flipped-horizontally &" nex|v"(~(use @util) ~(let @stylestring ~(get-value-for-style @nex $"transform")) ~(set @stylestring ~(if ~(is-nil @stylestring) $"scale(1,1)" @stylestring)) ~(let @xform ~(string-split-on @stylestring $",")) ~(let @horizhalf ~(car @xform)) ~(let @verthalf ~(cadr @xform)) ~(let @newstyle ~"v"(string-cat ~(if ~(equal @horizhalf $"scale(1") $"scale(-1" $"scale(1") $"," @verthalf)) ~(with-style-set-to @nex $"transform" @newstyle))) ~(bind @flipped-vertically &" nex|v"(~(use @util) ~(let @stylestring ~(get-value-for-style @nex $"transform")) ~(set @stylestring ~(if ~(is-nil @stylestring) $"scale(1,1)" @stylestring)) ~(let @xform ~(split-on @stylestring $",")) ~(let @horizhalf ~(car @xform)) ~(let @verthalf ~(cadr @xform)) ~(let @newstyle ~"v"(string-cat @horizhalf $"," ~(if ~(equal @verthalf $"1)") $"-1)" $"1)"))) ~(with-style-set-to @nex $"transform" @newstyle))) ~(bind @italicized &" nex|v"(~(with-style-set-to @nex $"font-style" $"italic"))) ~(bind @bolded &" nex|v"(~(with-style-set-to @nex $"font-weight" $"bold"))) ~(bind @with-light-weight &" nex|v"(~(with-style-set-to @nex $"font-weight" $"lighter"))) ~(bind @with-normal-weight &" nex|v"(~(with-style-set-to @nex $"font-weight" $"normal"))) ~(bind @with-text-in-color &" nex color$|v"(~(with-style-set-to @nex $"color" @color))) ~(bind @with-text-in-size &" nex size#%|v"(~(with-style-set-to @nex $"font-size" ~(string-cat ~(to-string @size) $"px")))) ~(bind @with-font &" nex fontname$|v"(~(with-style-set-to @nex $"font-family" @fontname))) ~(bind @lowercased &" nex|v"(~(with-style-set-to @nex $"text-transform" $"lowercase"))) ~(bind @uppercased &" nex|v"(~(with-style-set-to @nex $"text-transform" $"uppercase"))) ~(bind @get-value-for-style &"$ nex stylename$|v"(~(let @styletable ~(parse-style-string ~(get-css-style-from @nex))) ~(lookup-key-in @stylename @styletable))) ~(bind @with-style-set-to &" nex stylename$ styleval$|v"(~(let @styletable ~(parse-style-string ~(get-css-style-from @nex))) ~(let @newstyletable ~(add-style-key-value-to @stylename @styleval @styletable)) ~(apply-css-style-to ~(to-style-string @newstyletable) @nex))) ~(bind @add-style-key-value-to &" stylename$ styleval$ stylelist()|v"(~(use @util) ~(add-key-value-to @stylename @styleval ~(remove-all-entries-with-key-from @stylename @stylelist)))) ~(bind @parse-style-string &"() stylestring$|v"(~(map-with ~"v"(filter-with ~(string-split-on @stylestring $";") &" str|v"(~(not ~(equal @str $)))) &" item|v"(~(string-split-on @item $":"))))) ~(bind @to-style-string &"$ stylemap()|v"(~(string-join-on ~(map-with @stylemap &" item|v"(~(string-join-on @item $":"))) $";"))) ~(bind @with-same-style-as &" dst src|v"(~(apply-css-style-to ~(get-css-style-from @src) @dst))))