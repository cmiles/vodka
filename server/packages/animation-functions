~"package"v( @animation ~"import"h( @style-functions~) ~"import"h( @util-functions~) ~"bind"h( @FPS #20~) ~"bind"h( @flicker &"* nex"v( ~"do-on-every"v( &" n"v( ~"let"h( @r ~"random"h(~)~) ~"let"h( @opacity ~"if"v( ~">"h( @r %0.45~) %1 ~"if"v( ~">"h( @r %0.15~) %0.75 %0.2~)~)~) ~"style:with-alpha-of"h( @n @opacity~)&) @nex #100~)&)~) ~"bind"h( @reactivate-nested-animations &"() list()"v( ~"util:traverse-items-satisfying-and-do"v( @list &"! item"v( ~"is-expectation"h( @item~)&) &"* item*"v( @item&)~)&)~) ~"bind"h( @do-on-every &", f& nex interval#"v( ~"let"h( @make-delay &", n"v( ~"ff-with"h( ~"set-delay"h( ~"make-expectation"h( @n~) @interval~) @f~)&)~) ~"ff-with"v( ~"make-expectation"h( ~"make-delay"h( @nex~)~) &" nx"v( ~"make-delay"h( ~"car"h( @nx~)~)&)~)&)~) ~"bind"h( @do-on-every-with-param &", f& nex interval#"v( ~"let"h( @p #0~) ~"let"h( @make-delay &", n param#"v( ~"ff-with"v( ~"set-delay"h( ~"make-expectation"h( @n~) @interval~) &" n"v( ~"f"h( @n @param~)&)~)&)~) ~"ff-with"v( ~"make-expectation"h( ~"make-delay"h( @nex @p~)~) &" nx"v( ~"set"h( @p ~"+"h( @p #1~)~) ~"make-delay"h( ~"car"h( @nx~) @p~)&)~)&)~) ~"bind"h( @do-on-every-for &", f& nex interval# iterations#"v( ~"let"h( @its #0~) ~"let"h( @make-delay &", n"v( ~"ff-with"h( ~"set-delay"h( ~"make-expectation"h( @n~) @interval~) @f~)&)~) ~"ff-with"v( ~"make-expectation"h( ~"make-delay"h( @nex~)~) &" nx"v( ~"set"h( @its ~"+"h( @its #1~)~) ~"if"v( ~"<="h( @its @iterations~) ~"make-delay"h( ~"car"h( @nx~)~) ~"car"h( @nx~)~)&)~)&)~) ~"bind"h( @animate-with-for-duration-of &", nex animatefunc& duration%"v( ~"let"h( @delay-ms ~"to-integer"h( ~"/"h( %1000 @FPS~)~)~) ~"let"h( @num-frames ~"*"h( @duration @FPS~)~) ~"let"h( @increment ~"/"h( %1 @num-frames~)~) ~"let"h( @val %0~) ~"do-on-every-for"h( &" n"v( ~"set"h( @val ~"+"h( @val @increment~)~) ~"animatefunc"h( @n @val~)&) @nex @delay-ms ~"to-integer"h( @num-frames~)~)&)~) ~"bind"h( @loop &" exp-generator&"v( ~"ff-with"v( ~"make-expectation"h( ~"exp-generator"h(~)~) &" n"v( ~"eval"h( ~"exp-generator"h(~)~)&)~)&)~) ~"bind"h( @fade-in-for-seconds &", nex duration%"v( ~"animate-with-for-duration-of"v( ~"style:with-alpha-of"h( @nex %0~) &" nex val"v( ~"style:with-alpha-of"h( @nex @val~)&) @duration~)&)~) ~"bind"h( @seq &" exps,..."v( ~"ff-with"v( ~"make-expectation"h( ^~) &" exp"v( ~"if"v( ~"is-empty"h( @exps~) @exp ~"begin"v( ~"let"h( @r ~"car"h( @exps~)~) ~"set"h( @exps ~"cdr"h( @exps~)~) @r~)~)&)~)&)~) ~"bind"h( @fade-out-for-seconds &", nex duration%"v( ~"animate-with-for-duration-of"v( ~"style:with-alpha-of"h( @nex %1~) &" nex val"v( ~"style:with-alpha-of"h( @nex ~"-"h( %1 @val~)~)&) @duration~)&)~) ~"bind"h( @hold-for-seconds &", nex duration%"v( ~"set-delay"h( ~"make-expectation"h( @nex~) ~"to-integer"h( ~"*"h( @duration %1000~)~)~)&)~) ~"bind"h( @vertical-wipe &" nex newfgcolor$ newbgcolor$"v( ~"let"h( @nexheight ~"get-pixel-height"h( @nex~)~) ~"let"h( @nexwidth ~"get-pixel-width"h( @nex~)~) ~"let"h( @container ~"style:with-height-of"h( ~"style:with-width-of"h( () @nexwidth~) @nexheight~)~) ~"let"h( @newnex ~"style:with-text-in-color"v( ~"style:with-background-color-of"v( ~"copy"h( @nex~) @newbgcolor~) @newfgcolor~)~) ~"cons"h( @newnex ~"cons"h( @nex @container~)~)&)~) ~"bind"h( @top-mask-nex-by &" n amount%"v( ~"let"h( @nexheight ~"get-pixel-height"h( @n~)~) ~"let"h( @nexwidth ~"get-pixel-width"h( @n~)~) ~"let"h( @maskheight ~"*"h( @amount @nexheight~)~) ~"let"h( @mask ~"style:with-background-color-of"v( ~"style:with-height-of"v( ~"style:with-width-of"h( () @nexwidth~) @maskheight~) $"#ffffff"~)~) ~"cons"h( @n ~"cons"h( @mask ~"make-zlist"h(~)~)~)&)~) ~"bind"h( @bottom-mask-nex-by &" n amount%"v( ~"let"h( @nexheight ~"get-pixel-height"h( @n~)~) ~"let"h( @nexwidth ~"get-pixel-width"h( @n~)~) ~"let"h( @maskheight ~"*"h( @amount @nexheight~)~) ~"let"h( @mask ~"style:with-y-offset-of"v( ~"style:with-background-color-of"v( ~"style:with-height-of"v( ~"style:with-width-of"h( () @nexwidth~) @maskheight~) $"#ffffff"~) ~"-"h( @nexheight @maskheight~)~)~) ~"cons"h( @n ~"cons"h( @mask ~"make-zlist"h(~)~)~)&)~) ~"bind"h( @fudge-interval &" interval#"v( ~"to-integer"h( ~"*"h( ~"to-float"h( @interval~) ~"+"h( %.9 ~"*"h( %.2 ~"random"h(~)~)~)~)~)&)~) ~"bind"h( @random-color &""v( ~"string-cat"v( $"rgb(" ~"to-string"h( ~"random-from-to"h( #0 #255~)~) $"," ~"to-string"h( ~"random-from-to"h( #0 #255~)~) $"," ~"to-string"h( ~"random-from-to"h( #0 #255~)~) $")"~)&)~) ~"bind"h( @random-color-in-hsv-ranges &" huestart#% hueend#% satstart#% satend#% valstart#% valend#%"v( ~"string-cat"v( $"hsl(" ~"to-string"h( ~"*"h( %360 ~"random-from-to"h( @huestart @hueend~)~)~) $"," ~"to-string"h( ~"*"h( %100 ~"random-from-to"h( @satstart @satend~)~)~) $"%," ~"to-string"h( ~"*"h( %100 ~"random-from-to"h( @valstart @valend~)~)~) $"%)"~)&)~) ~"bind"h( @with-random-x-y &" nex width#% height#%"v( ~"let"h( @x ~"random-from-to"h( #0 @width~)~) ~"let"h( @y ~"random-from-to"h( #0 @height~)~) ~"style:with-left-padding-of"h( ~"style:with-top-padding-of"h( @nex @y~) @x~)&)~) ~"bind"h( @random-from-to &" start#% end#%"v( ~"let"h( @rand ~"*"h( ~"random"h(~) ~"-"h( ~"to-float"h( @end~) ~"to-float"h( @start~)~)~)~) ~"if"v( ~"or"h( ~"is-float"h( @start~) ~"is-float"h( @end~)~) @rand ~"to-integer"h( @rand~)~)&)~) ~"bind"h( @cycle-every &" list() interval#"v( ~"let"h( @len ~"util:length-of"h( @list~)~) ~"do-on-every-with-param"h( &" n p"v( ~"let"h( @index ~"modulo"h( @p @len~)~) ~"util:nth-from"h( @index @list~)&) ~"car"h( @list~) @interval~)&)~) ~"bind"h( @fade-between &"* thing1 thing2 fadetime% holdtime%"v( ~"loop"h( &""h( ~"seq"v( ~"fade-in-for-seconds"h( @thing1 @fadetime~) ~"hold-for-seconds"h( @thing1 @holdtime~) ~"fade-out-for-seconds"h( @thing1 @fadetime~) ~"fade-in-for-seconds"h( @thing2 @fadetime~) ~"hold-for-seconds"h( @thing2 @holdtime~) ~"fade-out-for-seconds"h( @thing2 @fadetime~)~)&)~)&)~) ~"bind"h( @random-item-from &" lst()"v( ~"let"h( @length ~"util:length-of"h( @lst~)~) ~"let"h( @n ~"to-integer"h( ~"*"h( @length ~"random"h(~)~)~)~) ~"util:nth-from"h( @n @lst~)&)~)~)